name: Sync Clash Config

on:
  schedule:
    - cron: '0 22 * * *'  # 每天晚上22点执行
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write

jobs:
  sync-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set current date
        id: date
        run: echo "::set-output name=yyyyMMdd::$(date +'%Y%m%d')"

      - name: Download clash1.yaml
        run: |
          curl -o clash1.yaml https://clashfreenode.com/feed/clash-${{ steps.date.outputs.yyyyMMdd }}.yaml
          if [ ! -s clash1.yaml ]; then
            echo "Failed to download clash1.yaml or file is empty"
            exit 1
          fi

      - name: Download clash2.yaml
        run: |
          curl -o clash2.yaml http://clashshare.cczzuu.top/node/${{ steps.date.outputs.yyyyMMdd }}-clash.yaml
          if [ ! -s clash2.yaml ]; then
            echo "Failed to download clash2.yaml or file is empty"
            exit 1
          fi

      - name: 检查文件是否有变更
        id: check-changes
        run: |
          if git diff --exit-code --quiet clash1.yaml clash2.yaml; then
            echo "没有检测到文件变更，跳过提交"
            echo "::set-output name=has_changes::false"
          else
            echo "检测到文件变更，继续提交"
            echo "::set-output name=has_changes::true"
          fi

      - name: Commit and push changes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add clash1.yaml clash2.yaml
          git commit -m 'Sync Clash Config'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin HEAD:${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}